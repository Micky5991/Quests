name: .NET Build

on:

    push:
        branches:
            - '*'
        tags:
            - '*.*.*'

    pull_request:
        branches:
            - '*'


jobs:
    variables:
        runs-on: ubuntu-latest
        name: Create variables
        outputs:
            istag: ${{ steps.vars.outputs.is_tag }}
            ref: ${{ steps.vars.outputs.ref }}

        steps:

            - id: vars
              run: |
                  echo ::set-output name=ref::${GITHUB_REF#refs/*/}
                  echo ::set-output name=is_tag::${{ startsWith(github.ref, 'refs/tags/') }}

    build:
        name: Build Package
        needs: variables

        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ macos-latest, windows-latest, ubuntu-latest ]


        steps:
            - uses: actions/checkout@v2

            - name: Setup .NET versions
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: |
                    3.1.x
                    5.0.x
                    6.0.x

            - name: Install dependencies
              run: dotnet restore

            - name: Build
              if: needs.variables.outputs.istag == 'false'
              run: dotnet build --configuration Release --no-restore

            - name: Build with version ${{ needs.variables.outputs.ref }}
              if: needs.variables.outputs.istag == 'true'
              run: dotnet build --configuration Release --no-restore -p:Version=${{ needs.variables.outputs.ref }} -p:PackageVersion=${{ needs.variables.outputs.ref }}

            - name: Test
              run: dotnet test -v normal

            - name: Save NuGet artifact
              if: success() && needs.variables.outputs.istag == 'true' && matrix.os == 'ubuntu-latest'
              uses: actions/upload-artifact@v2-preview
              with:
                  name: nuget-package
                  path: Quests/bin/Release/Micky5991.Quests.${{ needs.variables.outputs.ref }}.nupkg

    release:
        runs-on: ubuntu-latest
        needs: [ variables, build ]
        if: needs.build.result == 'success' && needs.variables.outputs.istag == 'true'

        steps:

            - uses: actions/download-artifact@v2
              with:
                  name: nuget-package
                  path: artifacts/

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: V${{ github.ref }}
                  draft: true
                  prerelease: false

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: artifacts/Micky5991.Quests.${{ needs.variables.outputs.ref }}.nupkg
                  asset_name: Micky5991.Quests.${{ needs.variables.outputs.ref }}.nupkg
                  asset_content_type: application/zip
